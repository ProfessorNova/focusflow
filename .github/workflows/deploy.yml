name: Continuous Deployment

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Write .env file
        run: echo DATABASE_URL="${{ secrets.DATABASE_URL }}" > .env && echo ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: build and push
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/professornova/focusflow/focusflow:latest --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_KEY }}
          script: |
            # Remove old images
            docker rmi $(docker images -a -q)

            # Login to GitHub Container Registry
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

            # Write environment variables to .env file
            echo POSTGRES_USER="${{ secrets.POSTGRES_USER }}" > .env
            echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo POSTGRES_DB="${{ secrets.POSTGRES_DB }}" >> .env
            echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env
            echo ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" >> .env

            # Pull and run the new image
            docker compose pull
            docker compose up -d --force-recreate

            # Wait for the container to start
            sleep 10

            # Remove .env file
            rm .env
